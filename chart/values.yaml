# Override the generated full name
fullnameOverride: "openport-exporter"
# Optional shorter name override
nameOverride: ""

image:
  repository: ghcr.io/renatogalera/openport-exporter
  # If empty, the chart's appVersion will be used
  tag: ""
  pullPolicy: IfNotPresent
  # For private registries
  pullSecrets: []
  # - name: my-regcred

# How many replicas of the exporter
replicaCount: 1

# Port the container will LISTEN on (exporter binds to LISTEN_PORT env)
listenPort: 9919

# HTTP metrics path
metrics:
  path: /metrics

# Deployment-level annotations/labels
deploymentAnnotations: {}
deploymentLabels: {}

# Pod-level annotations/labels
podAnnotations: {}
podLabels: {}

# Pod Disruption Budget
podDisruptionBudget:
  enabled: false
  minAvailable: 1
  # maxUnavailable: ""

serviceAccount:
  create: true
  name: ""
  annotations: {}
  automount: true

# Extra environment variables (simple name/value pairs)
extraEnv: []
#  - name: EXAMPLE_ENV
#    value: "someValue"

# Extra CLI args to pass to the exporter
extraArgs: []
#  - --log.level=info
#  - --log.format=json
#  - --metrics.path=/metrics
#  - --listen.port=9919
#  - --address=localhost
#  - --collector.go
#  - --collector.build_info=false

resources:
  requests:
    memory: "256Mi"
    cpu: "250m"
  limits:
    memory: "512Mi"
    cpu: "500m"

nodeSelector: {}
tolerations: []
affinity: {}
topologySpreadConstraints: []
priorityClassName: ""

# Pod security context (pod-level)
podSecurityContext: {}
  # runAsUser: 1000
  # runAsGroup: 1000
  # fsGroup: 2000
  # seccompProfile:
  #   type: RuntimeDefault

# Container security context (container-level)
containerSecurityContext: {}
  # allowPrivilegeEscalation: false
  # runAsNonRoot: true
  # capabilities:
  #   add: ["NET_RAW"]   # Required for SYN scans; remove if use_syn_scan=false

readinessProbe:
  enabled: true
  path: "/-/ready"
  initialDelaySeconds: 5
  periodSeconds: 10
  timeoutSeconds: 3
  failureThreshold: 3

livenessProbe:
  enabled: true
  path: "/-/healthy"
  initialDelaySeconds: 10
  periodSeconds: 10
  timeoutSeconds: 3
  failureThreshold: 3

ingress:
  enabled: false
  className: ""
  # Prefer the list form; 'host' kept for backwards compatibility
  host: "openport.example.com"
  hosts: []
  #  - host: openport.example.com
  #    paths:
  #      - path: /
  #        pathType: Prefix
  annotations: {}
  tls: []
  #  - hosts: ["openport.example.com"]
  #    secretName: openport-tls-cert

service:
  type: ClusterIP
  port: 9919
  annotations: {}
  labels: {}
  # nodePort: 309919   # if type=NodePort

serviceMonitor:
  enabled: false
  interval: 30s
  scrapeTimeout: 10s
  labels: {}
  annotations: {}
  namespace: ""
  # Advanced relabelings (optional)
  relabelings: []
  metricRelabelings: []

configMap:
  labels: {}
  annotations: {}

# ---- Exporter configuration (rendered as /app/config.yaml) ----
config:
  server:
    port: 9919
    trusted_proxies_cidrs: []
  scanning:
    interval: 10800
    port_range: "1-65535"
    max_cidr_size: 24
    timeout: 3600
    duration_metrics: false
    disable_dns_resolution: true
    udp_scan: false
    use_syn_scan: true
    # Legacy worker knobs (scheduler.* is preferred but used as fallback)
    rate_limit: 60
    task_queue_size: 100
    worker_count: 5
    # Nmap tuning
    min_rate: 1000
    max_rate: 0
    min_parallelism: 1000
    max_retries: 6
    host_timeout: 300
    scan_delay: 0
    max_scan_delay: 0
    initial_rtt_timeout: 0
    max_rtt_timeout: 0
    min_rtt_timeout: 0
    disable_host_discovery: true

  # Authentication for Tasks API (optional)
  auth:
    bearer_token: ""
    basic:
      username: ""
      password: ""

  # Background targets (module is currently ignored by background scheduler)
  targets:
    - name: "dmz_ssh"
      target: "192.168.1.0/24"
      port_range: "22"
      protocol: "tcp"
      interval: "1h"
      module: "tcp_syn_fast"
    - name: "branch_web"
      target: "10.0.0.0/24"
      port_range: "80,443"
      protocol: "tcp"
      interval: "2h"
      module: "tcp_connect_safe"

  # Optional allowlisted detailed per-port series (bounded by budget)
  # background_details:
  #   enabled: true
  #   series_budget: 2000
  #   ttl: "30m"
  #   include_alias: true
  #   include_ip: true
  #   targets:
  #     - alias: "ssh-bastion-primary"
  #       cidr: "203.0.113.10/32"
  #       protocol: "tcp"
  #       ports: ["22"]

  policy:
    client_allow_cidrs: ["127.0.0.0/8"]
    rate_limit_rps: 2.0
    rate_burst: 2
    max_concurrent: 2
    series_limit: 250000

  scheduler:
    worker_count: 5
    task_queue_size: 100
    default_timeout: "30m"
    default_max_cidr_size: 24
    dedupe_ttl: "15m"
    task_gc_max: 10000
    task_gc_max_age: "24h"
    module_limits:
      default: 0
      tcp_syn_fast: 2

  modules:
    tcp_syn_fast:
      protocol: tcp
      ports: "22,80,443,1000-1024"
      use_syn_scan: true
      min_rate: 2000
      min_parallelism: 1000
      max_retries: 3
      host_timeout: 180
      disable_host_discovery: true
    tcp_connect_safe:
      protocol: tcp
      ports: "22,80,443"
      use_syn_scan: false
      max_retries: 2
      host_timeout: 120
