apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "openport-exporter.fullname" . }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "openport-exporter.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  strategy:
    type: RollingUpdate
  template:
    metadata:
    {{- if .Values.configMap.labels }}
      labels:
    {{- toYaml .Values.deployment.labels | nindent 10 }}
    {{- end }}
    {{- if .Values.deployment.annotations }}
      annotations:
    {{- toYaml .Values.deployment.annotations | nindent 10 }}
    {{- end }}
    spec:
      serviceAccountName: {{ include "openport-exporter.serviceAccountName" . }}
      {{- if .Values.podSecurityContext }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      {{- end }}
      {{- if .Values.containerSecurityContext.enabled }}
      nodeSelector:
        {{- toYaml .Values.nodeSelector | nindent 8 }}
      {{- end }}
      {{- if .Values.tolerations }}
      tolerations:
        {{- toYaml .Values.tolerations | nindent 8 }}
      {{- end }}
      {{- if .Values.affinity }}
      affinity:
        {{- toYaml .Values.affinity | nindent 8 }}
      {{- end }}
      containers:
      - name: openport-exporter
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        {{- if .Values.extraArgs }}
        args:
          {{- toYaml .Values.extraArgs | nindent 10 }}
        {{- end }}
        {{- if .Values.containerSecurityContext.enabled }}
        securityContext:
          {{- toYaml .Values.containerSecurityContext | nindent 10 }}
        {{- end }}
        ports:
          - containerPort: {{ .Values.config.server.port }}
            name: metrics
        env:
          {{- range .Values.extraEnv }}
          - name: {{ .name }}
            value: "{{ .value }}"
          {{- end }}
        volumeMounts:
          - name: config-volume
            mountPath: /app/config.yaml
            subPath: config.yaml
        resources:
          {{- toYaml .Values.resources | nindent 10 }}
        {{- if .Values.readinessProbe.enabled }}
        readinessProbe:
          httpGet:
            path: {{ .Values.readinessProbe.path | default "/-/ready" }}
            port: metrics
          initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds }}
          periodSeconds: {{ .Values.readinessProbe.periodSeconds }}
          timeoutSeconds: {{ .Values.readinessProbe.timeoutSeconds }}
          failureThreshold: {{ .Values.readinessProbe.failureThreshold }}
        {{- end }}
        {{- if .Values.livenessProbe.enabled }}
        livenessProbe:
          httpGet:
            path: {{ .Values.livenessProbe.path | default "/-/healthy" }}
            port: metrics
          initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
          periodSeconds: {{ .Values.livenessProbe.periodSeconds }}
          timeoutSeconds: {{ .Values.livenessProbe.timeoutSeconds }}
          failureThreshold: {{ .Values.livenessProbe.failureThreshold }}
        {{- end }}
      volumes:
        - name: config-volume
          configMap:
            name: {{ include "openport-exporter.fullname" . }}-config
