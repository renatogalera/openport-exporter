name: Release (Tag Orchestrated)

on:
  push:
    tags: ['v*']
  workflow_dispatch:

concurrency:
  group: release-${{ github.ref_name }}
  cancel-in-progress: false

jobs:
  test:
    name: Go Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/setup-go@v5
        with:
          go-version-file: go.mod
          check-latest: true
          cache: true
      - run: go build ./...
      - run: go test -v ./...

  docker:
    name: Docker Build & Push
    runs-on: ubuntu-latest
    needs: [test]
    permissions:
      contents: read
      packages: write
    env:
      REGISTRY: ghcr.io
      IMAGE_NAME: ${{ github.repository }}
    steps:
      - uses: actions/checkout@v4
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Buildx
        uses: docker/setup-buildx-action@v3
      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract metadata (tags, labels)
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=tag
            type=semver,pattern={{major}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{version}}
            type=raw,value=latest,enable={{is_default_branch}}
      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          pull: true
          no-cache: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            VERSION=${{ github.ref_name }}
            REVISION=${{ github.sha }}
            BRANCH=${{ github.ref_name }}
            DATE=${{ github.run_id }}

  goreleaser:
    name: GoReleaser
    runs-on: ubuntu-latest
    needs: [docker]
    permissions:
      contents: write
      packages: write
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/setup-go@v5
        with:
          go-version-file: go.mod
          check-latest: true
          cache: true
      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v6
        with:
          distribution: goreleaser
          version: '~> v2'
          args: release --clean
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  bump_chart:
    name: Bump Chart Values
    runs-on: ubuntu-latest
    needs: [goreleaser]
    permissions:
      contents: write
      pull-requests: write
    env:
      CHART_DIR: chart
    steps:
      - uses: actions/checkout@v4
        with:
          ref: main
          fetch-depth: 0
      - name: Set version var
        id: vars
        run: echo "version=${GITHUB_REF_NAME}" >> $GITHUB_OUTPUT
      - name: Install yq
        uses: mikefarah/yq@v4
      - name: Update values.yaml (image.tag) and Chart.yaml (appVersion)
        env:
          VERSION: ${{ steps.vars.outputs.version }}
        run: |
          set -euo pipefail
          test -f "$CHART_DIR/values.yaml"
          test -f "$CHART_DIR/Chart.yaml"
          yq -i '.image.tag = env(VERSION)' "$CHART_DIR/values.yaml"
          yq -i '.appVersion = env(VERSION)' "$CHART_DIR/Chart.yaml"
          echo "Updated image.tag and appVersion to ${VERSION}"
      - name: Raise pull request
        uses: peter-evans/create-pull-request@v6
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: "chore(chart): bump image.tag & appVersion to ${{ steps.vars.outputs.version }} [skip ci]"
          branch: "chore/bump-chart-to-${{ steps.vars.outputs.version }}"
          title: "chore(chart): bump image.tag & appVersion to ${{ steps.vars.outputs.version }}"
          body: |
            Bumps Helm chart values to `${{ steps.vars.outputs.version }}`:
            - `values.yaml: image.tag`
            - `Chart.yaml: appVersion`

            Triggered by tag `${{ steps.vars.outputs.version }}`.
          labels: chart, automation, release
          base: main

